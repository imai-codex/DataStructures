class Node {
    int data;
    Node next;
    public Node(int data) {
        this.data = data;
        this.next = null;
    }
}

public class middleElement{
    Node head;
    public void printList() {
        if (head == null) {
            System.out.println("The list is empty.");
            return;
        }
        Node temp = head;
        while (temp != null) {
            System.out.print(temp.data + " ");
            temp = temp.next;
        }
        System.out.println();
    }
    public void findMiddle() {
        if (head == null) {
            System.out.println("The list is empty.");
            return;
        }
        Node slow = head;
        Node fast = head;
        while (fast != null && fast.next != null) {
            slow = slow.next;           
            fast = fast.next.next;      
        }
        System.out.println("The middle element is: " + slow.data);
    }
    public void append(int data) {
        Node newNode = new Node(data);
        if (head == null) {
            head = newNode;
            return;
        }
        Node temp = head;
        while (temp.next != null) {
            temp = temp.next;
        }
        temp.next = newNode;
    }

    public static void main(String[] args) {
        middleElement list = new middleElement();
        list.append(11);
        list.append(22);
        list.append(33);
        list.append(44);
        list.append(55);
        System.out.println("Linked List:");
        list.printList();
        list.findMiddle(); 
    }
}
